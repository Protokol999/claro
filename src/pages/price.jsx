import { CheckCircle, FlashOn, Star } from '@mui/icons-material';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import {
  Accordion,
  AccordionDetails,
  AccordionSummary,
  Box,
  Button,
  Card,
  CardActions,
  CardContent,
  Container,
  Divider,
  Grid,
  Typography
} from '@mui/material';
import { motion } from 'framer-motion';

const prices = [
  {
    title: '–ë–∞–∑–æ–≤—ã–π',
    price: '99$ / –º–µ—Å—è—Ü',
    features: [
      '–ê—É–¥–∏—Ç —Ä–µ–∫–ª–∞–º—ã',
      '–ó–∞–ø—É—Å–∫ –∫–∞–º–ø–∞–Ω–∏–∏',
      '–û—Ç—á–µ—Ç —Ä–∞–∑ –≤ –º–µ—Å—è—Ü',
      '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ–Ω–ª–∞–π–Ω'
    ]
  },
  {
    title: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
    price: '199$ / –º–µ—Å—è—Ü',
    features: [
      '–ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç',
      '–¢–∞—Ä–≥–µ—Ç –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º',
      '–†–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥',
      '–û—Ç—á–µ—Ç —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
      '–ü–æ–¥–±–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤'
    ]
  },
  {
    title: '–ü—Ä–µ–º–∏—É–º',
    price: '399$ / –º–µ—Å—è—Ü',
    features: [
      '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è',
      '–ó–∞–ø—É—Å–∫ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö',
      '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ 24/7',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
      '–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞'
    ]
  }
];

const extras = [
  '–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –∏ –±–∞–Ω–Ω–µ—Ä–æ–≤',
  '–í–µ–¥–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π',
  '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ TikTok, Instagram, Facebook',
  '–ò–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥',
  'SEO + –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥'
];

const whyChooseUs = [
  { icon: <CheckCircle color='success' />, text: '–ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å' },
  { icon: <Star color='warning' />, text: '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞' },
  { icon: <FlashOn color='error' />, text: '–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∫–∞–º–ø–∞–Ω–∏–π' }
];

const faqs = [
  {
    q: '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç?',
    a: '–û–±—ã—á–Ω–æ –ø–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã –≤–∏–¥–Ω—ã —É–∂–µ —á–µ—Ä–µ–∑ 1‚Äì2 –Ω–µ–¥–µ–ª–∏.'
  },
  {
    q: '–í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –±—é–¥–∂–µ—Ç–∞–º–∏?',
    a: '–î–∞, –º—ã –ø–æ–¥–±–∏—Ä–∞–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ–¥ –≤–∞—à –±—é–¥–∂–µ—Ç –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –∫–∞–º–ø–∞–Ω–∏–∏.'
  },
  {
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞—É–¥–∏—Ç?',
    a: '–ö–æ–Ω–µ—á–Ω–æ! –ú—ã –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞—É–¥–∏—Ç –∏ –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é.'
  },
  {
    q: '–ö–∞–∫–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?',
    a: '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å Facebook, Instagram, TikTok –∏ –¥—Ä—É–≥–∏–º–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏.'
  },
  {
    q: '–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∞—Ä–∏—Ñ–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ?',
    a: '–î–∞, –Ω–∞—à–∏ —Ç–∞—Ä–∏—Ñ—ã –≥–∏–±–∫–∏–µ –∏ –º–æ–≥—É—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.'
  }
];

export const Price = () => {
  return (
    <Box sx={{ backgroundColor: '#212121', minHeight: '100vh', py: 8 }}>
      <Container maxWidth='lg'>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <Typography
          variant='h3'
          align='center'
          gutterBottom
          sx={{ fontWeight: 'bold', color: 'white' }}
        >
          –¢–∞—Ä–∏—Ñ—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
        </Typography>
        <Typography
          variant='subtitle1'
          align='center'
          sx={{ mb: 6, color: 'gray' }}
        >
          –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∏ –ø–æ–ª—É—á–∏—Ç–µ –º–∞–∫—Å–∏–º—É–º –æ—Ç —Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π
          —Ä–µ–∫–ª–∞–º—ã
        </Typography>

        {/* –¢–∞—Ä–∏—Ñ—ã */}
        <Grid container spacing={4} mb={12}>
          {prices.map((plan, index) => (
            <Grid item xs={12} sm={4} key={index}>
              <motion.div
                initial={{ opacity: 0, y: 50 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.2 }}
                whileHover={{ scale: 1.05, y: -5 }}
              >
                <Card
                  sx={{
                    height: '100%',
                    borderRadius: 4,
                    boxShadow: 6,
                    background: 'linear-gradient(135deg, #2a2a2a, #333333)',
                    color: 'white',
                    display: 'flex',
                    flexDirection: 'column',
                    justifyContent: 'space-between',
                    transition: 'all 0.4s ease',
                    '&:hover': {
                      background:
                        'linear-gradient(135deg, #FF8C00, #FF0080, #8A2BE2)',
                      boxShadow: '0 20px 40px rgba(0,0,0,0.6)'
                    }
                  }}
                >
                  <CardContent>
                    <Typography variant='h5' gutterBottom>
                      {plan.title}
                    </Typography>
                    <Typography variant='h4' sx={{ fontWeight: 'bold', mb: 2 }}>
                      {plan.price}
                    </Typography>
                    <ul style={{ paddingLeft: 16 }}>
                      {plan.features.map((feat, i) => (
                        <li key={i}>
                          <Typography variant='body1'>{feat}</Typography>
                        </li>
                      ))}
                    </ul>
                  </CardContent>
                  <CardActions sx={{ justifyContent: 'center', pb: 2 }}>
                    <Button
                      variant='contained'
                      size='large'
                      sx={{
                        borderRadius: 5,
                        px: 4,
                        backgroundColor: '#ff9800',
                        '&:hover': { backgroundColor: '#e68900', scale: 1.05 }
                      }}
                    >
                      –í—ã–±—Ä–∞—Ç—å
                    </Button>
                  </CardActions>
                </Card>
              </motion.div>
            </Grid>
          ))}
        </Grid>

        {/* –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å */}
        <Box textAlign='center' mb={8}>
          <Typography
            variant='h4'
            gutterBottom
            fontWeight='bold'
            sx={{ color: 'white' }}
          >
            –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å ‚ú®
          </Typography>
          <Grid container spacing={4} justifyContent='center'>
            {whyChooseUs.map((item, i) => (
              <Grid item xs={12} sm={4} key={i}>
                <motion.div
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: i * 0.2 }}
                  whileHover={{ scale: 1.05 }}
                >
                  <Card
                    sx={{
                      p: 3,
                      borderRadius: 3,
                      textAlign: 'center',
                      boxShadow: 3,
                      background: 'rgba(255,255,255,0.05)'
                    }}
                  >
                    <Box mb={1} fontSize={36}>
                      {item.icon}
                    </Box>
                    <Typography sx={{ color: 'white' }}>{item.text}</Typography>
                  </Card>
                </motion.div>
              </Grid>
            ))}
          </Grid>
        </Box>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ */}
        <Box textAlign='center' mb={8}>
          <Typography
            variant='h4'
            gutterBottom
            fontWeight='bold'
            sx={{ color: 'white' }}
          >
            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ üöÄ
          </Typography>
          <Grid container spacing={2}>
            {extras.map((extra, i) => (
              <Grid item xs={12} sm={6} md={4} key={i}>
                <motion.div
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: i * 0.2 }}
                  whileHover={{ scale: 1.05 }}
                >
                  <Card
                    sx={{
                      p: 2,
                      borderRadius: 3,
                      background: 'rgba(0,0,0,0.05)',
                      boxShadow: 2,
                      textAlign: 'center'
                    }}
                  >
                    <Typography sx={{ color: 'white' }}>{extra}</Typography>
                  </Card>
                </motion.div>
              </Grid>
            ))}
          </Grid>
        </Box>

        {/* FAQ */}
        <Box>
          <Divider sx={{ mb: 6, backgroundColor: '#FF8C00' }} />
          <Typography
            variant='h4'
            gutterBottom
            textAlign='center'
            fontWeight='bold'
            sx={{ color: 'white' }}
          >
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚ùì
          </Typography>
          {faqs.map((faq, i) => (
            <motion.div
              key={i}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: i * 0.2 }}
            >
              <Accordion
                sx={{
                  mb: 2,
                  backgroundColor: '#2a2a2a',
                  color: 'white',
                  '&:before': { display: 'none' }
                }}
              >
                <AccordionSummary
                  expandIcon={<ExpandMoreIcon sx={{ color: 'white' }} />}
                >
                  <Typography variant='subtitle1' fontWeight='bold'>
                    {faq.q}
                  </Typography>
                </AccordionSummary>
                <AccordionDetails>
                  <Typography>{faq.a}</Typography>
                </AccordionDetails>
              </Accordion>
            </motion.div>
          ))}
        </Box>
      </Container>
    </Box>
  );
};
